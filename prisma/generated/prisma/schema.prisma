// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  isAdmin   Boolean    @default(false)
  isBlocked Boolean    @default(false)
  createdAt DateTime   @default(now())
  templates Template[]
  forms     Form[]
}

model Template {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  topic       String
  imageUrl    String?       @default("https://res.cloudinary.com/dupcshdti/image/upload/v1750362614/template_default_img_doyzwe.jpg")
  isPublic    Boolean       @default(true)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?
  authorId    Int?
  author      User?         @relation(fields: [authorId], references: [id])
  tags        TemplateTag[]
  questions   Question[]
  forms       Form[]
}

model Tag {
  id        Int           @id @default(autoincrement())
  name      String        @unique
  templates TemplateTag[]
}

model TemplateTag {
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  templateId Int
  tag        Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId      Int

  @@id([templateId, tagId])
}

model Question {
  id          Int          @id @default(autoincrement())
  templateId  Int
  template    Template     @relation(fields: [templateId], references: [id], onDelete: Cascade)
  type        QuestionType
  title       String
  description String?
  showInTable Boolean      @default(true)
  enabled     Boolean      @default(true)
  order       Int
  answers     Answer[]
}

enum QuestionType {
  singleLine
  multiLine
  integer
  checkbox
}

model Form {
  id         Int      @id @default(autoincrement())
  templateId Int
  userId     Int
  createdAt  DateTime @default(now())
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  answers    Answer[]
}

model Answer {
  id         Int      @id @default(autoincrement())
  formId     Int
  questionId Int
  value      String
  form       Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
}
